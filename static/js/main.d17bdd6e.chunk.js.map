{"version":3,"sources":["menu.png","App.js","reportWebVitals.tsx","store.js","index.js"],"names":["module","exports","__webpack_require__","p","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","cos","App","props","handleSubmit","selectedType","dispatch","onSubmit","_ref","_asyncToGenerator","_callee","response","data","_context","fetch","headers","Content-Type","body","JSON","stringify","ok","json","console","log","splice","payload","message","meta","form","field","t0","_x","_x2","apply","arguments","React","createElement","className","src","menuu","alt","Form","id","htmlFor","Field","component","placeholder","required","normalize","onlyNums","replace","concat","onChange","event","selectedValue","target","change","min","step","max","Button","reduxForm","selector","formValueSelector","connect","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","formReducer","store","createStore","ReactDOM","createRoot","document","getElementById","render","Provider"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8RCCxCC,EAAA,kBAAAH,GAAA,IAAAA,EAAA,GAAAI,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAC,OAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAZ,EAAAC,EAAAE,GAAA,OAAAR,OAAAI,eAAAC,EAAAC,EAAA,CAAAE,QAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAf,EAAAC,GAAA,IAAAW,EAAA,aAAAI,GAAAJ,EAAA,SAAAZ,EAAAC,EAAAE,GAAA,OAAAH,EAAAC,GAAAE,GAAA,SAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAvB,qBAAA2B,EAAAJ,EAAAI,EAAAC,EAAA7B,OAAA8B,OAAAH,EAAA1B,WAAA8B,EAAA,IAAAC,EAAAN,GAAA,WAAAtB,EAAAyB,EAAA,WAAArB,MAAAyB,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA9B,EAAA+B,GAAA,WAAAC,KAAA,SAAAD,IAAAD,EAAAG,KAAAjC,EAAA+B,IAAA,MAAAf,GAAA,OAAAgB,KAAA,QAAAD,IAAAf,IAAA1B,EAAA2B,OAAA,IAAAiB,EAAA,YAAAX,KAAA,SAAAY,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzB,EAAAyB,EAAA/B,EAAA,kBAAAgC,OAAA,IAAAC,EAAA5C,OAAA6C,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA/C,GAAAG,EAAAoC,KAAAQ,EAAAnC,KAAA+B,EAAAI,GAAA,IAAAE,EAAAP,EAAAxC,UAAA2B,EAAA3B,UAAAD,OAAA8B,OAAAY,GAAA,SAAAO,EAAAhD,GAAA,0BAAAiD,QAAA,SAAAC,GAAAlC,EAAAhB,EAAAkD,EAAA,SAAAf,GAAA,OAAAO,KAAAS,QAAAD,EAAAf,OAAA,SAAAiB,EAAAxB,EAAAyB,GAAA,IAAAC,EAAAnD,EAAAuC,KAAA,WAAAnC,MAAA,SAAA2C,EAAAf,GAAA,SAAAoB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAf,EAAAqB,EAAAC,GAAA,IAAAE,EAAA1B,EAAAL,EAAAsB,GAAAtB,EAAAO,GAAA,aAAAwB,EAAAvB,KAAA,KAAAwB,EAAAD,EAAAxB,IAAA5B,EAAAqD,EAAArD,MAAA,OAAAA,GAAA,iBAAAA,GAAAN,EAAAoC,KAAA9B,EAAA,WAAA8C,EAAAG,QAAAjD,EAAAsD,SAAAC,KAAA,SAAAvD,GAAAmD,EAAA,OAAAnD,EAAAiD,EAAAC,IAAA,SAAArC,GAAAsC,EAAA,QAAAtC,EAAAoC,EAAAC,KAAAJ,EAAAG,QAAAjD,GAAAuD,KAAA,SAAAC,GAAAH,EAAArD,MAAAwD,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAxB,KAAAuB,CAAAR,EAAAf,EAAAqB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAvB,EAAAV,EAAAE,EAAAM,GAAA,IAAAmC,EAAA,iCAAAf,EAAAf,GAAA,iBAAA8B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAf,EAAA,OAAAgC,IAAA,IAAArC,EAAAoB,SAAApB,EAAAK,QAAA,KAAAiC,EAAAtC,EAAAsC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAtC,GAAA,GAAAuC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAvC,EAAAoB,OAAApB,EAAAyC,KAAAzC,EAAA0C,MAAA1C,EAAAK,SAAA,aAAAL,EAAAoB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAnC,EAAAK,IAAAL,EAAA2C,kBAAA3C,EAAAK,SAAA,WAAAL,EAAAoB,QAAApB,EAAA4C,OAAA,SAAA5C,EAAAK,KAAA8B,EAAA,gBAAAN,EAAA1B,EAAAX,EAAAE,EAAAM,GAAA,cAAA6B,EAAAvB,KAAA,IAAA6B,EAAAnC,EAAA6C,KAAA,6BAAAhB,EAAAxB,MAAAG,EAAA,gBAAA/B,MAAAoD,EAAAxB,IAAAwC,KAAA7C,EAAA6C,MAAA,UAAAhB,EAAAvB,OAAA6B,EAAA,YAAAnC,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,OAAA,SAAAmC,EAAAF,EAAAtC,GAAA,IAAA8C,EAAA9C,EAAAoB,SAAAkB,EAAAzD,SAAAiE,GAAA,QAAAC,IAAA3B,EAAA,OAAApB,EAAAsC,SAAA,eAAAQ,GAAAR,EAAAzD,SAAAmE,SAAAhD,EAAAoB,OAAA,SAAApB,EAAAK,SAAA0C,EAAAP,EAAAF,EAAAtC,GAAA,UAAAA,EAAAoB,SAAA,WAAA0B,IAAA9C,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAA1B,EAAAiB,EAAAkB,EAAAzD,SAAAmB,EAAAK,KAAA,aAAAwB,EAAAvB,KAAA,OAAAN,EAAAoB,OAAA,QAAApB,EAAAK,IAAAwB,EAAAxB,IAAAL,EAAAsC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAxB,IAAA,OAAA6C,IAAAL,MAAA7C,EAAAsC,EAAAa,YAAAD,EAAAzE,MAAAuB,EAAAoD,KAAAd,EAAAe,QAAA,WAAArD,EAAAoB,SAAApB,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,GAAA/C,EAAAsC,SAAA,KAAA9B,GAAA0C,GAAAlD,EAAAoB,OAAA,QAAApB,EAAAK,IAAA,IAAA4C,UAAA,oCAAAjD,EAAAsC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAAvB,KAAA,gBAAAuB,EAAAxB,IAAAmD,EAAAQ,WAAAnC,EAAA,SAAA5B,EAAAN,GAAAiB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA9D,EAAAwB,QAAAmC,EAAA1C,WAAAqD,OAAA,YAAAjD,EAAAkD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAtF,GAAA,GAAAuF,EAAA,OAAAA,EAAA5D,KAAA2D,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAlB,EAAA,SAAAA,IAAA,OAAAkB,EAAAJ,EAAAG,QAAA,GAAAlG,EAAAoC,KAAA2D,EAAAI,GAAA,OAAAlB,EAAA3E,MAAAyF,EAAAI,GAAAlB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA3E,WAAAsE,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAA5D,WAAAsE,EAAAF,MAAA,UAAApC,EAAAvC,UAAAwC,EAAArC,EAAA4C,EAAA,eAAAxC,MAAAiC,EAAAtB,cAAA,IAAAf,EAAAqC,EAAA,eAAAjC,MAAAgC,EAAArB,cAAA,IAAAqB,EAAA8D,YAAArF,EAAAwB,EAAA1B,EAAA,qBAAApB,EAAA4G,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAjE,GAAA,uBAAAiE,EAAAH,aAAAG,EAAAE,QAAAhH,EAAAiH,KAAA,SAAAJ,GAAA,OAAAxG,OAAA6G,eAAA7G,OAAA6G,eAAAL,EAAA/D,IAAA+D,EAAAM,UAAArE,EAAAxB,EAAAuF,EAAAzF,EAAA,sBAAAyF,EAAAvG,UAAAD,OAAA8B,OAAAkB,GAAAwD,GAAA7G,EAAAoH,MAAA,SAAA3E,GAAA,OAAA0B,QAAA1B,IAAAa,EAAAI,EAAApD,WAAAgB,EAAAoC,EAAApD,UAAAY,EAAA,kBAAA8B,OAAAhD,EAAA0D,gBAAA1D,EAAAqH,MAAA,SAAAzF,EAAAC,EAAAC,EAAAC,EAAA4B,QAAA,IAAAA,MAAA2D,SAAA,IAAAC,EAAA,IAAA7D,EAAA/B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA4B,GAAA,OAAA3D,EAAA4G,oBAAA/E,GAAA0F,IAAA/B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAArD,MAAA0G,EAAA/B,UAAAlC,EAAAD,GAAA/B,EAAA+B,EAAAjC,EAAA,aAAAE,EAAA+B,EAAArC,EAAA,kBAAAgC,OAAA1B,EAAA+B,EAAA,mDAAArD,EAAAwH,KAAA,SAAAC,GAAA,IAAAC,EAAArH,OAAAoH,GAAAD,EAAA,WAAA7G,KAAA+G,EAAAF,EAAAtB,KAAAvF,GAAA,OAAA6G,EAAAG,UAAA,SAAAnC,IAAA,KAAAgC,EAAAf,QAAA,KAAA9F,EAAA6G,EAAAI,MAAA,GAAAjH,KAAA+G,EAAA,OAAAlC,EAAA3E,MAAAF,EAAA6E,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAAxF,EAAAoD,SAAAf,EAAA/B,UAAA,CAAAyG,YAAA1E,EAAAgE,MAAA,SAAAwB,GAAA,GAAA7E,KAAA8E,KAAA,EAAA9E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAP,SAAA0C,EAAAnC,KAAAiD,WAAA1C,QAAA4C,IAAA0B,EAAA,QAAAb,KAAAhE,KAAA,MAAAgE,EAAAe,OAAA,IAAAxH,EAAAoC,KAAAK,KAAAgE,KAAAR,OAAAQ,EAAAgB,MAAA,MAAAhF,KAAAgE,QAAA7B,IAAA8C,KAAA,WAAAjF,KAAAiC,MAAA,MAAAiD,EAAAlF,KAAAiD,WAAA,GAAAG,WAAA,aAAA8B,EAAAxF,KAAA,MAAAwF,EAAAzF,IAAA,OAAAO,KAAAmF,MAAApD,kBAAA,SAAAqD,GAAA,GAAApF,KAAAiC,KAAA,MAAAmD,EAAA,IAAAhG,EAAAY,KAAA,SAAAqF,EAAAC,EAAAC,GAAA,OAAAtE,EAAAvB,KAAA,QAAAuB,EAAAxB,IAAA2F,EAAAhG,EAAAoD,KAAA8C,EAAAC,IAAAnG,EAAAoB,OAAA,OAAApB,EAAAK,SAAA0C,KAAAoD,EAAA,QAAA7B,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAAzC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAwC,EAAA,UAAAzC,EAAAC,QAAA7C,KAAA8E,KAAA,KAAAU,EAAAjI,EAAAoC,KAAAiD,EAAA,YAAA6C,EAAAlI,EAAAoC,KAAAiD,EAAA,iBAAA4C,GAAAC,EAAA,IAAAzF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,MAAA9C,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,iBAAA,GAAAyC,GAAA,GAAAxF,KAAA8E,KAAAlC,EAAAE,SAAA,OAAAuC,EAAAzC,EAAAE,UAAA,YAAA2C,EAAA,UAAAjE,MAAA,6CAAAxB,KAAA8E,KAAAlC,EAAAG,WAAA,OAAAsC,EAAAzC,EAAAG,gBAAAf,OAAA,SAAAtC,EAAAD,GAAA,QAAAiE,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,QAAA7C,KAAA8E,MAAAvH,EAAAoC,KAAAiD,EAAA,eAAA5C,KAAA8E,KAAAlC,EAAAG,WAAA,KAAA2C,EAAA9C,EAAA,OAAA8C,IAAA,UAAAhG,GAAA,aAAAA,IAAAgG,EAAA7C,QAAApD,MAAAiG,EAAA3C,aAAA2C,EAAA,UAAAzE,EAAAyE,IAAAtC,WAAA,UAAAnC,EAAAvB,OAAAuB,EAAAxB,MAAAiG,GAAA1F,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAkD,EAAA3C,WAAAnD,GAAAI,KAAA2F,SAAA1E,IAAA0E,SAAA,SAAA1E,EAAA+B,GAAA,aAAA/B,EAAAvB,KAAA,MAAAuB,EAAAxB,IAAA,gBAAAwB,EAAAvB,MAAA,aAAAuB,EAAAvB,KAAAM,KAAAwC,KAAAvB,EAAAxB,IAAA,WAAAwB,EAAAvB,MAAAM,KAAAmF,KAAAnF,KAAAP,IAAAwB,EAAAxB,IAAAO,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAvB,MAAAsD,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAAgG,OAAA,SAAA7C,GAAA,QAAAW,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAG,eAAA,OAAA/C,KAAA2F,SAAA/C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAhD,IAAAiG,MAAA,SAAAhD,GAAA,QAAAa,EAAA1D,KAAAiD,WAAAQ,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAd,EAAA5C,KAAAiD,WAAAS,GAAA,GAAAd,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAAvB,KAAA,KAAAoG,EAAA7E,EAAAxB,IAAA0D,EAAAP,GAAA,OAAAkD,GAAA,UAAAtE,MAAA,0BAAAuE,cAAA,SAAAzC,EAAAf,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAzD,SAAAmC,EAAAkD,GAAAf,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAP,SAAA0C,GAAAvC,IAAA5C,EAOA,IAAIgJ,EAAM,GAENC,EAAM,SAACC,GAAU,IAEXC,EAAgDD,EAAhDC,aAAcC,EAAkCF,EAAlCE,aAAcC,EAAoBH,EAApBG,SAAUhD,EAAU6C,EAAV7C,MAExCiD,EAAQ,eAAAC,EAAAC,YAAArJ,IAAA8G,KAAG,SAAAwC,EAAOrG,EAAQiG,GAAQ,IAAAK,EAAAC,EAAA,OAAAxJ,IAAAwB,KAAA,SAAAiI,GAAA,cAAAA,EAAA9B,KAAA8B,EAAApE,MAAA,cAAAoE,EAAA9B,KAAA,EAAA8B,EAAApE,KAAA,EAIbqE,MAAM,iEAAkE,CAC7FrG,OAAQ,OACRsG,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU9G,KACrB,OANY,KAARsG,EAAQE,EAAA/E,MAQDsF,GAAE,CAAAP,EAAApE,KAAA,SACXkE,EAASU,OAAOhG,KAAK,SAAAuF,GACnBU,QAAQC,IAAIX,KAEdtD,IAEA2C,EAAIuB,OAAO,EAAGvB,EAAIvC,QAAOmD,EAAApE,KAAA,wBAAAoE,EAAApE,KAAA,GAERkE,EAASU,OAAM,QAA5BT,EAAIC,EAAA/E,KACVmE,EAAM3I,OAAO+C,OAAOuG,GAEpBN,EAAS,CACP3G,KAAM,aACN8H,QAASb,EAAKc,QACdC,KAAM,CACJC,KAAM,cACNC,MAAO,YAER,QAAAhB,EAAApE,KAAA,iBAAAoE,EAAA9B,KAAA,GAAA8B,EAAAiB,GAAAjB,EAAA,SAGLS,QAAQ/F,MAAKsF,EAAAiB,IACbxB,EAAS,CACP3G,KAAM,aACN8H,QAAS,+CACTE,KAAM,CACJC,KAAM,cACNC,MAAO,YAER,yBAAAhB,EAAA3B,SAAAwB,EAAA,kBAEN,gBA3CaqB,EAAAC,GAAA,OAAAxB,EAAAyB,MAAAhI,KAAAiI,YAAA,GAmFd,OACIC,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,OAAKC,UAAU,uCACXF,IAAAC,cAAA,OAAKC,UAAU,oBACXF,IAAAC,cAAA,OAAKC,UAAU,iCACXF,IAAAC,cAAA,OAAKC,UAAU,wBACXF,IAAAC,cAAA,OAAKE,IAAKC,IAAOF,UAAU,aAAaG,IAAI,WAGpDL,IAAAC,cAAA,OAAKC,UAAU,gDAEbF,IAAAC,cAACK,IAAI,CAACC,GAAG,YAAYnC,SAAUH,EAAaG,IAC1C4B,IAAAC,cAAA,WACED,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOO,QAAQ,OAAON,UAAU,cAAa,eAC7CF,IAAAC,cAACQ,IAAK,CAAC3E,KAAK,OAAOoE,UAAU,sBAAsBQ,UAAU,QAAQlJ,KAAK,OAAOmJ,YAAY,qBAAqBC,UAAQ,KAG5HZ,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOO,QAAQ,mBAAmBN,UAAU,cAAa,sBACzDF,IAAAC,cAACQ,IAAK,CAAC3E,KAAK,mBAAmBoE,UAAU,sBAAsBQ,UAAU,QAAQlJ,KAAK,OAAOqJ,UAzD1F,SAAClL,GAC1B,IAAKA,EACH,OAAOA,EAGT,IAAMmL,EAAWnL,EAAMoL,QAAQ,SAAU,IAEzC,OAAID,EAASvF,QAAU,EACduF,EAGLA,EAASvF,QAAU,EACrB,GAAAyF,OAAUF,EAAShE,MAAM,EAAG,GAAE,KAAAkE,OAAIF,EAAShE,MAAM,IAGnD,GAAAkE,OAAUF,EAAShE,MAAM,EAAG,GAAE,KAAAkE,OAAIF,EAAShE,MAAM,EAAG,GAAE,KAAAkE,OAAIF,EAAShE,MAAM,EAAG,KA0CsE6D,YAAY,WAAWC,UAAQ,KAG7JZ,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOO,QAAQ,OAAON,UAAU,cAAa,UAC7CF,IAAAC,cAACQ,IAAK,CAAC3E,KAAK,OAAOyE,GAAG,OAAOL,UAAU,sBAAsBe,SA5C1D,SAACC,GAC1B,IAAMC,EAAgBD,EAAME,OAAOzL,MAEb,UAAlBwL,IACFhD,EAASkD,YAAO,cAAe,kBAAmB,KAClDlD,EAASkD,YAAO,cAAe,kBAAmB,MAE9B,SAAlBF,IACFhD,EAASkD,YAAO,cAAe,eAAgB,KAC/ClD,EAASkD,YAAO,cAAe,WAAY,KAC3ClD,EAASkD,YAAO,cAAe,kBAAmB,MAE9B,aAAlBF,IACFhD,EAASkD,YAAO,cAAe,eAAgB,KAC/ClD,EAASkD,YAAO,cAAe,WAAY,KAC3ClD,EAASkD,YAAO,cAAe,kBAAmB,OA6B6DX,UAAU,SAASlJ,KAAK,OAAOoJ,UAAQ,GAChIZ,IAAAC,cAAA,UAAQtK,MAAM,IAAG,eACjBqK,IAAAC,cAAA,UAAQtK,MAAM,SAAQ,SACtBqK,IAAAC,cAAA,UAAQtK,MAAM,QAAO,QACrBqK,IAAAC,cAAA,UAAQtK,MAAM,YAAW,eAKb,UAAjBuI,GACC8B,IAAAC,cAAA,WACED,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOO,QAAQ,eAAeN,UAAU,cAAa,sBACrDF,IAAAC,cAACQ,IAAK,CAAC3E,KAAK,eAAeoE,UAAU,sBAAsBK,GAAG,eAAeG,UAAU,QAAQlJ,KAAK,SAAS8J,IAAI,IAAIX,YAAY,mBAAmBC,UAAQ,KAE9JZ,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOO,QAAQ,WAAWN,UAAU,cAAa,cACjDF,IAAAC,cAACQ,IAAK,CAAC3E,KAAK,WAAWoE,UAAU,sBAAsBK,GAAG,WAAWG,UAAU,QAAQlJ,KAAK,SAAS+J,KAAK,OAAOD,IAAI,OAAOX,YAAY,WAAWC,UAAQ,MAI/I,SAAjB1C,GACC8B,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOO,QAAQ,kBAAkBN,UAAU,cAAa,qBACxDF,IAAAC,cAACQ,IAAK,CAAC3E,KAAK,kBAAkBoE,UAAU,sBAAsBK,GAAG,kBAAkBG,UAAU,QAAQlJ,KAAK,SAASmJ,YAAY,kBAAkBW,IAAI,IAAIE,IAAI,KAAKZ,UAAQ,KAG5J,aAAjB1C,GACC8B,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOO,QAAQ,kBAAkBN,UAAU,cAAa,qBACxDF,IAAAC,cAACQ,IAAK,CAAC3E,KAAK,kBAAkBoE,UAAU,sBAAsBK,GAAG,kBAAkBG,UAAU,QAAQlJ,KAAK,SAAS8J,IAAI,IAAIX,YAAY,kBAAkBC,UAAQ,KAGpKZ,IAAAC,cAAA,OAAKC,UAAU,SAASpC,EAAI,IAC7BkC,IAAAC,cAACwB,IAAM,CAACjK,KAAK,SAAS0I,UAAU,gCAA+B,gBAWrFnC,EAAM2D,YAAU,CACdjC,KAAM,eADFiC,CAEH3D,GAEH,IAAM4D,EAAWC,YAAkB,eAUpB7D,EAPfA,EAAM8D,YAAQ,SAAAxI,GAEZ,MAAO,CACL6E,aAFmByD,EAAStI,EAAO,UADjCwI,CAKH9D,GCrKY+D,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCjN,EAAAkN,EAAA,GAAA/I,KAAAnE,EAAAmN,KAAA,WAAqBhJ,KAAK,SAAAmF,GAAiD,IAA9C8D,EAAM9D,EAAN8D,OAAQC,EAAM/D,EAAN+D,OAAQC,EAAMhE,EAANgE,OAAQC,EAAMjE,EAANiE,OAAQC,EAAOlE,EAAPkE,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,sBCNRS,EAAcC,YAAgB,CAClChD,KAAMiD,MAIOC,EADDC,YAAYJ,GCCbK,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjD,IAAAC,cAACiD,IAAQ,CAACP,MAAOA,GACf3C,IAAAC,cAAClC,EAAG,QAIR+D","file":"static/js/main.d17bdd6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.21a6c5f9.png\";","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Field, reduxForm, formValueSelector, change } from 'redux-form';\nimport  Button  from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport menuu from './menu.png'\n\nlet cos = []\n\nlet App = (props) => {\n\n  const { handleSubmit, selectedType, dispatch, reset } = props;\n\n  const onSubmit = async (values, dispatch) => {\n    // console.log(values);\n  \n    try {\n      const response = await fetch('https://umzzcc503l.execute-api.us-west-2.amazonaws.com/dishes/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values),\n      });\n  \n      if (response.ok) {\n          response.json().then(data =>{\n            console.log(data)\n          })\n          reset()\n          \n          cos.splice(0, cos.length)\n      } else {\n        const data = await response.json();\n        cos = Object.values(data)\n\n        dispatch({\n          type: 'POST_ERROR',\n          payload: data.message,\n          meta: {\n            form: 'dishFormVal',\n            field: '_error',\n          },\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      dispatch({\n        type: 'POST_ERROR',\n        payload: 'An error occurred while submitting the form.',\n        meta: {\n          form: 'dishFormVal',\n          field: '_error',\n        },\n      });\n    }\n  };\n\n\n  const normalizeTimeField = (value) => {\n    if (!value) {\n      return value;\n    }\n  \n    const onlyNums = value.replace(/[^\\d]/g, '');\n  \n    if (onlyNums.length <= 2) {\n      return onlyNums;\n    }\n  \n    if (onlyNums.length <= 4) {\n      return `${onlyNums.slice(0, 2)}:${onlyNums.slice(2)}`;\n    }\n  \n    return `${onlyNums.slice(0, 2)}:${onlyNums.slice(2, 4)}:${onlyNums.slice(4, 6)}`;\n  };\n\n  const handleSelectChange = (event) => {\n    const selectedValue = event.target.value;\n\n    if (selectedValue === 'pizza') {\n      dispatch(change('dishFormVal', 'spiciness_scale', ''));\n      dispatch(change('dishFormVal', 'slices_of_bread', ''));\n    }\n    if (selectedValue === 'soup') {\n      dispatch(change('dishFormVal', 'no_of_slices', ''));\n      dispatch(change('dishFormVal', 'diameter', ''));\n      dispatch(change('dishFormVal', 'slices_of_bread', ''));\n    }\n    if (selectedValue === 'sandwich') {\n      dispatch(change('dishFormVal', 'no_of_slices', ''));\n      dispatch(change('dishFormVal', 'diameter', ''));\n      dispatch(change('dishFormVal', 'spiciness_scale', ''));\n    }\n  };\n\n  return (\n      <div className=\"container h-100\">\n          <div className=\"d-flex justify-content-center h-100\">\n              <div className=\"user_card shadow\">\n                  <div className=\"d-flex justify-content-center\">\n                      <div className=\"brand_logo_container\">\n                          <img src={menuu} className=\"brand_logo\" alt=\"Logo\" />\n                      </div>\n                  </div>\n                  <div className=\"d-flex justify-content-center form_container\">\n\n                    <Form id='dishformm' onSubmit={handleSubmit(onSubmit)}>\n                      <div>\n                        <div>\n                          <label htmlFor=\"name\" className='textshadow'>Dish name: </label>\n                          <Field name=\"name\" className=\"form-control shadow\" component=\"input\" type=\"text\" placeholder=\"Dish name(3 chars)\" required />\n                        </div>\n\n                        <div>\n                          <label htmlFor=\"preparation_time\" className='textshadow'>Preparation time: </label>\n                          <Field name=\"preparation_time\" className=\"form-control shadow\" component=\"input\" type=\"text\" normalize={normalizeTimeField} placeholder=\"00:00:00\" required/>\n                        </div>\n\n                        <div>\n                          <label htmlFor=\"type\" className='textshadow'>Type: </label>\n                          <Field name=\"type\" id='type' className=\"form-control shadow\" onChange={handleSelectChange} component=\"select\" type=\"text\" required>\n                            <option value=''>Select type</option>\n                            <option value='pizza'>Pizza</option>\n                            <option value='soup'>Soup</option>\n                            <option value='sandwich'>Sandwich</option>\n                          </Field>\n                        </div>\n                      </div>\n\n                      {selectedType === 'pizza' && (\n                        <div>\n                          <div>\n                            <label htmlFor=\"no_of_slices\" className='textshadow'>Number of slices: </label>\n                            <Field name=\"no_of_slices\" className=\"form-control shadow\" id='no_of_slices' component=\"input\" type=\"number\" min='1' placeholder=\"Number of slices\" required/>\n                          </div>\n                          <div>\n                            <label htmlFor=\"diameter\" className='textshadow'>Diameter: </label>\n                            <Field name=\"diameter\" className=\"form-control shadow\" id='diameter' component=\"input\" type=\"number\" step=\"0.01\" min=\"0.01\" placeholder=\"Diameter\" required/>\n                          </div>\n                        </div>\n                      )}\n                      {selectedType === 'soup' && (\n                        <div>\n                          <label htmlFor=\"spiciness_scale\" className='textshadow'>Spiciness scale: </label>\n                          <Field name=\"spiciness_scale\" className=\"form-control shadow\" id='spiciness_scale' component=\"input\" type=\"number\" placeholder=\"Spiciness scale\" min='1' max='10' required />\n                        </div>\n                      )}\n                      {selectedType === 'sandwich' && (\n                        <div>\n                          <label htmlFor=\"slices_of_bread\" className='textshadow'>Slices of bread: </label>\n                          <Field name=\"slices_of_bread\" className=\"form-control shadow\" id='slices_of_bread' component=\"input\" type=\"number\" min='1' placeholder=\"Slices of bread\" required/>\n                        </div>\n                      )}\n                      {<div className='error'>{cos[0]}</div>}\n                      <Button type=\"submit\" className='btn btn-success butek shadow'>Submit</Button>\n                    </Form>\n\n\n                  </div>\n              </div>\n          </div>\n      </div>\n  );\n};\n\nApp = reduxForm({\n  form: 'dishFormVal',\n})(App);\n\nconst selector = formValueSelector('dishFormVal')\n\n\nApp = connect(state => {\n  const selectedType = selector(state, 'type')\n  return {\n    selectedType,\n  }\n})(App)\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry: ReportHandler | undefined) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst rootReducer = combineReducers({\r\n  form: formReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}